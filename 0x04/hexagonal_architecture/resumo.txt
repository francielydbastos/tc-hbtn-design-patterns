
A Arquitetura Hexagonal é uma proposta de arquitetura de software que sugere a organização do código em camadas com responsabilidades distintas, com o objetivo de isolar a lógica da aplicação do mundo externo, levando a um software com alta coesão, baixo acoplamento, boa reusabilidade de código e e independente de tecnologia. Essa arquitetura, também conhecida como "Ports and Adapters", foi proposta por Alistair Cockburn nos anos 90.
A Arquitetura se assemelha à Clean Architecture por propor a divisão em camadas, propondo o isolamento e a inversão de controle. Uma das principais diferenças entre as duas é a proposta de "entradas e saídas" presente na Arquitetura Hexagonal. Além disso, uma das principais propostas da Arquitetura Hexagonal é a divisão do sistema em dois grupos principais: classes de domínio e classes de infraestrutura/tecnologia. A comunicação entre as classes desses grupos distintos é feita através de adapters.
Na minha opinião, apesar de suas diversas vantagens, a Arquitetura Hexagonal é mais adequada para projetos de sistemas complexos. Por propor o isolamento das diferentes camadas, ela demanda um grande esforço de desenvolvimento que não seria interessante para projetos menores.